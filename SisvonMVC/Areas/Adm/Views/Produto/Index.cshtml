@using PagedList.Mvc
@model PagedList.IPagedList<Sisvon.Model.Entities.Produto>

@{
    ViewBag.Title = "Produtos";
}
<div class="col-sm-12 bg-color-white">
    <div class=" body-content-padding">
        <h2>Produtos</h2>

        <form class="col-sm-5" method="GET" style="padding-bottom: 80px;">
            <h4>Filtrar resultado:</h4>
            <hr />
            <div class="form-horizontal">
                <div class="form-group form-group-sm">
                    <label class="control-label col-sm-2" for="busca">buscar:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" id="busca" placeholder="Nome ou Código" name="busca" value="@ViewBag.busca" />
                    </div>
                </div>
                <div class="form-group-sm form-group">

                    <div class="col-sm-10 col-sm-offset-2">
                        <label class="radio-inline">
                            <input type="radio" name="ativo" id="ativotrue" value="true" @(ViewBag.ativo != null && ViewBag.ativo == true ? "checked" : "") > Ativo
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="ativo" id="ativofalse" value="false" @(ViewBag.ativo != null && ViewBag.ativo == false ? "checked" : "")> Inativo
                        </label>
                    </div>
                </div>
                <div class="form-group-sm form-group ">
                    <button class="btn btn-success align-right" type="submit">Buscar</button>
                </div>

            </div>
        </form>

        <p class="col-sm-12">
            @Html.ActionLink("Importar Produtos", "Importar", null, new { @class = "btn btn-sm btn-success" })
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("Código")
                </th>

                <th>
                    @Html.DisplayName("Nome")
                </th>
                <th>
                    @Html.DisplayName("Preço")
                </th>
                <th>
                    @Html.DisplayName("Ativo")
                </th>
                <th>
                    @Html.DisplayName("Estoque")
                </th>

                <th></th>
            </tr>

            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Codigo)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>
                        <td>
                            @item.Preco.ToString("C")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Ativo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EstoqueDisponivel) un
                        </td>

                        <td>
                            @Html.ActionLink(" ", "Detalhes", new { id = item.ProdutoId, nome = item.Nome }, new { @class = "fa fa-search", title = "Detalhes" })|
                            @Html.ActionLink(" ", "Editar", new { id = item.ProdutoId, nome = item.Nome }, new { @class = "fa fa-pencil", title = "Editar" })|
                            @Html.ActionLink(" ", "Excluir", new { id = item.ProdutoId, nome = item.Nome }, new { @class = "color-red fa fa-remove", title = "Remover" })
                        </td>
                    </tr>
                }

            }
        </table>
        @if (Model != null && (Model.HasNextPage || Model.HasPreviousPage))
        {
            <div class="text-center">
                @Html.PagedListPager(Model, p => Url.Action("Index", new {page = p, busca = ViewBag.busca, ativo = ViewBag.ativo }), PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>
        }
    </div>
</div>