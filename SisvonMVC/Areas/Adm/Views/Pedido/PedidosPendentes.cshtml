@using PagedList.Mvc
@model PagedList.IPagedList<Sisvon.Model.Entities.Pedido>

@{
    ViewBag.Title = "Aprovar Pedidos";
}

<div class="col-sm-12">
    <div class="body-content-padding">
        <h2>Aprovar Pedidos</h2>

        <form class="col-sm-5" method="GET" style="padding-bottom: 80px;">
            <h4>Filtrar resultado:</h4>
            <hr />
            <div class="form-horizontal">
                <div class="form-group form-group-sm">
                    <label class="control-label col-sm-2" for="busca">buscar:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" id="busca" placeholder="Cliente ou Código" name="busca" value="@ViewBag.busca" />
                    </div>
                </div>

                <div class="form-group-sm form-group ">
                    <button class="btn btn-success align-right" type="submit">Buscar</button>
                </div>

            </div>
        </form>


        <table class="table">
            <tr>
                <th style="width: 10%">
                    @Html.DisplayName("Codigo")
                </th>
                <th >
                    @Html.DisplayName("Cliente")
                </th>
                <th style="width: 20%">
                    @Html.DisplayName("Data do pedido")
                </th>
                <th style="width: 16%">
                    @Html.DisplayName("Valor")
                </th>
                <th style="width: 5%"></th>
            </tr>

            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.PedidoId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cliente.Nome)
                        </td>
                        <td>
                            @item.DataPedido.ToShortDateString()
                        </td>
                        <td>
                            R$ @item.ValorTotal.ToString("N")
                        </td>
                        <td>
                            @Html.ActionLink(" ", "AprovarPedido", new { id = item.PedidoId }, new { @class = "fa fa-check-square-o color-green", title="Aprovar" })
                        </td>
                    </tr>
                }
            }

        </table>
        @if (Model != null && (Model.HasNextPage || Model.HasPreviousPage))
        {
            <div class="text-center">
                @Html.PagedListPager(Model, p => Url.Action("PedidosPendentes", new { page = p, busca = ViewBag.busca, ativo = ViewBag.ativo }), PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>
        }
    </div>
</div>
